{
  "name": "@kode-konveyor/inez",
  "version": "1.0.20",
  "main": "index.js",
  "type": "module",
  "scripts": {
    "preinstall": "git config core.hooksPath .githooks",
    "all": "npm run qa && cordova build android",
    "qa": "npm run lint && npm run test && npm run end2endtest && npm run mutate",
    "ng": "ng",
    "end2endtest": "npm run build && npm run startMongo && (npm run startserver & npm run e2e) && npm run stopserver && npm run stopMongo",
    "e2e": "runContracts -j dist/out-tsc -c e2e/userJourney.ts",
    "lint": "eslint .",
    "start": "ng serve --proxy-config=proxy.conf.json",
    "build": "ng build",
    "contractbuild": "for i in contracts/*/*; do esbuild $i --format=esm --bundle --platform=node  --external:espree --external:eslint --external:colors --external:commander --external:debug --external:@typescript-eslint/parser --outfile=dist/$(dirname $i)/$(basename $i .ts ).js --sourcemap=inline; done",
    "watch": "ng build --watch --configuration development",
    "test": "npm run contractbuild && runContracts",
    "mutate": "tsc -b && stryker run",
    "startserver": "mkdir -p tmp&& node --unhandled-rejections=strict node_modules/zenta2-server/dist/app.js",
    "stopserver": "kill $(cat tmp/server.pid)",
    "startMongo": "docker run -p 27017:27017 -d mongo",
    "stopMongo": "docker kill $(docker ps |grep mongo|awk '{print $1}')",
    "publish:patch": "npm run qa && npm version patch &&./tools/updateversion&& git push origin develop --tags && npm publish",
    "publish:minor": "npm run qa && npm version minor &&./tools/updateversion&& git push origin develop --tags && npm publish",
    "publish:major": "npm run qa && npm version major &&./tools/updateversion&& git push origin develop --tags && npm publish"
  },
  "keywords": [
    "ecosystem:cordova"
  ],
  "dependencies": {
    "@angular/animations": "latest",
    "@angular/common": "latest",
    "@angular/core": "latest",
    "@angular/forms": "latest",
    "@angular/platform-browser": "latest",
    "@angular/platform-browser-dynamic": "latest",
    "@angular/router": "latest",
    "@auth0/auth0-angular": "latest",
    "@capacitor/android": "latest",
    "@capacitor/app": "latest",
    "@capacitor/browser": "latest",
    "@capacitor/core": "latest",
    "@capacitor/haptics": "latest",
    "@capacitor/ios": "latest",
    "@capacitor/keyboard": "latest",
    "@capacitor/status-bar": "latest",
    "@ionic/angular": "latest",
    "@ngrx/effects": "latest",
    "@ngrx/store": "latest",
    "eslint-plugin-kodekonveyor": "^1.0.5",
    "immer": "latest",
    "rxjs": "latest",
    "tslib": "latest",
    "tsyringe": "latest",
    "zone.js": "latest"
  },
  "cordova": {
    "platforms": [
      "android"
    ]
  },
  "serve": {
    "builder": "@angular-devkit/build-angular:dev-server",
    "options": {
      "browserTarget": "inez:build",
      "proxyConfig": "/proxy.conf.json"
    }
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "latest",
    "@angular/cli": "latest",
    "@angular/compiler": "latest",
    "@angular/compiler-cli": "latest",
    "@capacitor/cli": "latest",
    "@stryker-mutator/core": "latest",
    "@types/selenium-webdriver": "latest",
    "@types/sinon": "latest",
    "@typescript-eslint/eslint-plugin": "latest",
    "android": "latest",
    "cdd-ts": "latest",
    "chromedriver": "latest",
    "colors": "latest",
    "cordova-android": "latest",
    "eslint": "latest",
    "eslint-config-prettier": "latest",
    "eslint-config-standard-with-typescript": "latest",
    "eslint-plugin-import": "latest",
    "eslint-plugin-n": "latest",
    "eslint-plugin-promise": "latest",
    "geckodriver": "latest",
    "selenium-webdriver": "latest",
    "typescript": "latest",
    "zenta2-server": "latest"
  }
}
